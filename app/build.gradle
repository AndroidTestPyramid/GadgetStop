apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "droidcon.gadgetstop"
        minSdkVersion 21
        targetSdkVersion 22
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug{
            testCoverageEnabled = true
        }
    }
    testOptions{
        unitTests.returnDefaultValues = true
    }
}

apply plugin: 'jacoco'
jacoco {
    toolVersion = "0.7.1.201405082137"
}
def coverageSourceDirs = [
        'src/main/java'
]

// Can merge both
task generateJacocoTestReports(type:JacocoReport, dependsOn: "test") {
    group = "Reporting"
    description = "Generate unit test coverage reports"
    classDirectories = fileTree(
            dir: 'build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )
    sourceDirectories = files(coverageSourceDirs)
    additionalSourceDirs = files(coverageSourceDirs)
    executionData = files('build/jacoco/testDebugUnitTest.exec')
}

task generateIntegrationJacocoTestReports(type:JacocoReport, dependsOn: "connectedAndroidTest") {
    group = "Reporting"
    description = "Generate test coverage reports"
    classDirectories = fileTree(
            dir: 'build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       '**/*Activity*.*',
                       '**/*Fragment*.*']
    )
    sourceDirectories = files(coverageSourceDirs)
    additionalSourceDirs = files(coverageSourceDirs)
    executionData = files('build/outputs/code-coverage/connected/coverage.ec')
}


dependencies {
    compile 'com.android.support:support-v4:22.2.1'
    compile 'com.android.support:design:22.2.1'
    compile 'com.github.satyan:sugar:1.3.1'
    compile 'com.google.code.gson:gson:2.4'
    testCompile 'org.apache.commons:commons-io:1.3.2'
    testCompile 'junit:junit:4.4'
    testCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile('com.android.support.test:runner:0.4.1'){
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.1'){
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-intents:2.2.1') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile 'com.squareup.okhttp:mockwebserver:2.4.0'
}
